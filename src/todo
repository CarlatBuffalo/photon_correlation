Pressing:
-write t3 g1 calculation (for lifetimes)
-write interface to picoquant for Python, Matlab
-write basic tests for picoquant, others
-test on linux32, win32, win64
-write up notes on Timeharp: the records for t3r are _not_ t2 or t3, but the raw data used to build the histogram. As such, they cannot simply be tied to a pulse, but we can wort of treat them as though they are. This will proabably throw off correlations (except t2 type, if we are lucky).

Picoquant:
-fluorescence correlation spectroscopy: autocorrelation of summed signal
-build automated tests to check the output for each file type
-flag --to-t2 gives t2 output from t3 file (error if not one of those types)

> Testing:
>> Picoharp
-v20
--phd: linux32, linux64
--pt2: linux32, linux64
--pt3: linux32, linux64

>> Hydraharp
-v10
--hhd: linux32, linux64
--ht2: linux32, linux64
--ht3: linux32, linux64

>> TimeHarp
-v20 (software version 3.02, but format version 2.0? Data straight from the v302 sample data)
--thd: linux32, linux64
--thc: no
--t3r: linux32, linux64

-v30
--thd: linux32, linux64
--thc: no
--t3r: linux32, linux64. Seems to have a lot of special records, but things match up with the filedemo version of the reader.

-v50
--thd: linux32, linux64
--thc: no
--t3r: linux32, linux64

-v60:
--thd: linux64
--thc: no
--t3r: no

Correlate:

> Testing
>> t2: linux64
>> t3: linux64

Histogram:
-three modes: t2-gn, t3-g1, t3-gn
-print-every to output to a log file every so often (this would be useful for long runs)
-make the bins into doubles: integral histogramming is prone to stupid errors.

Intensity:
-given a bin width, count the number of entries in a bin, then iterate until the end of the file.
