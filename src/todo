General:
-write interface for Python, Matlab
-write automated test for all programs
-test more thoroughly on linux32, win32, win64
-write up notes on Timeharp: the records for t3r are _not_ t2 or t3, but the raw data used to build the histogram. As such, they cannot simply be tied to a pulse, but we can wort of treat them as though they are. This will proabably throw off correlations (except t2 type, if we are lucky).
-look into errno and related for dealing with errors.
-profile performance, and look to see if there are any obvious bottlenecks
-build a quick gui for picking windows to pass?
-do a better job of detecting mode mismatch 

Scripts:
-interpreter for t2, t3 modes into Python
-plotting for t3 mode correlation

Picoquant:
-flag --to-t2 gives t2 output from t3 file (error if not one of those types)
-find a way to deal with offsets. Maybe an external program which takes the records in and adds the offset, with a queue of some time length (equal to the largest offset seems reasonable) to reorder the records as needed.
-opening of files seems to fail on linux32. Why?

> Testing:
>> Picoharp
-v20
--phd: linux32, linux64
--pt2: linux32, linux64
--pt3: linux32, linux64

>> Hydraharp
-v10
--hhd: linux32, linux64
--ht2: linux32, linux64
--ht3: linux32, linux64

>> TimeHarp
-v20 (software version 3.02, but format version 2.0? Data straight from the v302 sample data)
--thd: linux32, linux64
--thc: no
--t3r: linux32, linux64

-v30
--thd: linux32, linux64
--thc: no
--t3r: linux32, linux64. Seems to have a lot of special records, but things match up with the filedemo version of the reader.

-v50
--thd: linux32, linux64
--thc: no
--t3r: linux32, linux64

-v60:
--thd: linux64
--thc: no
--t3r: no

Correlate:
> Testing
>> t2: linux64
>> t3: linux64

Histogram:
-print-every to output to a log file every so often (this would be useful for long runs)
-test to see that the sum over all counts is equal to the number of entries histogrammed
> t2: done, need more thorough testing
> t3_g1: done, need more thorough testing
> t3_gn: done, need more thorough testing

Intensity:
-given a bin width, count the number of entries in a bin, then iterate until the end of the file.
> Testing
>> t2: linux64, linux32
>> t3: linux64, linux32
