Thomas Bischof
tbischof@mit.edu

-------- General outline ----------
The tools produced in this package are designed to perform a number of tasks 
related to calculation of photon correlation functions. The rough procedure 
is as follows:
(1) Generate photon arrival time data.
(2) Correlate photons to the desired order.
(3) Group the correlation events into histogram bins related to time delays.

(1) is achieved in one of two ways. Given binary data from a Picoquant device,
the executable picoquant can produce the photon data in a standardized format:
t2 mode:
channel (int), time (int) \n

t3 mode:
channel (int), pulse number (int), time (int) \n

The executable supports a number of Picoquant models and versions (pass --help)
as a flag to see a list.

All further processing relies on this format for photon data, so any process
which produces ascii photons in this format is suitable. 

(2) is achieved by the correlate executable. This takes in photon data, and
finds the appropriate number of photons for a correlation of nth order. The 
output from this looks like:
channel 0, channel 1, delay 1, delay 2, ... counts \n
but the exact specification depends on the order and mode specified.

(3) is achieved by the histogram exectuable.



In addition to these basic processes, there are tools for dealing with wayward
data:
- picoquant t3 data can be converted to t2 data by passing --to-t2. See the 
  executable documentation for details
- channels can be used to suppress photons arriving on a channel, or to add
  a time (pulse) offset to the result
- t3_as_t2 removes the time information from t3 data, leaving just the pulse 
  information. This makes the photon look like a t2 photon

-------- Compilation ----------
The code here is written in C99, and has no external dependencies outside the
standard C library. It has been tested on both 32-bit and 64-bit Linux 
(openSUSE) with GCC, and can hopefully be compiled using the provided Makefile.


-------- Program structure --------
