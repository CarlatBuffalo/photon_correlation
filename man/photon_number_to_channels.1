.TH PHOTON_NUMBER_TO_CHANNELS 1 "2014-12-29" "4.2"
.SH NAME
photon_number_to_channels - Distinguish photons based on their number and order
.SH SYNOPSIS
.B photon_number_to_channels
[
.BI \-\-verbose 
] [ 
.BI \-\-help
] [
.BI \-\-version
] [
.BI \-\-file\-in= file
] [ 
.BI \-\-file\-out= file
] [ 
.BI \-\-queue\-size= size
] [
.BI \-\-correlate\-successive
]
.SH DESCRIPTION
.BI photon_number_to_channels
takes a stream of t3 photons and assigns each photon to a channel which 
uniquely identifies the number of other photons which arrived after the same
pulse, and its order relative to those other photons.

Each number of photons is treated in order, so the channels are assigned as
follows:

	0: 1 photon in pulse, first photon
.br
	1: 2 photons in pulse, first photon
.br
	2: 2 photons in pulse, second photon
.br
	...

Thus for the \fBn\fRth photon (indexed from 0) of a pulse containing 
\fBm\fR photons, the assigned channel is m*(m-1)/2+n. 

The primary application for this tool is the decomposition of the center peaks
in g(n) calculations. For example, examination of channels 1 and 2 enables 
study of biexciton and exciton emission from quantum dots.

Photon records can either be reported in order (default), or their arrival
times can be correlated to produce the waiting time distribution for each
successive photon (--correlate-successive).

.SH EXAMPLES
For these examples, t3.txt is used:

	0,1,3
.br
	1,4,2
.br
	0,4,3
.br
	0,10,10
.br
	1,10,15
.br
	0,15,2

.SS Present photons in order

	$ photon_number_to_channels --file-in data.t3
.br
	0,1,3
.br
	1,4,3
.br
	2,4,3
.br
	1,10,10
.br
	2,10,15
.br
	0.15,2

.SS Present the time delay between photons

	$ photon_number_to_channels --file-in data.t3 
.br
	                            --correlate-successive
.br
	0,1,3
.br
	1,4,2
.br
	2,4,1
.br
	1,10,10
.br
	2,10,5
.br
	0,15,2

.SH OPTIONS
.TP 
.BR \-v\fR,\ \fB\-\-verbose
Display debug messages during execution, sent to stderr. 
.TP
.BR \-h \fR,\ \fB\-\-help
Display a usage message.
.TP
.BR \-V \fR,\ \fB\-\-version
Display the version of the program.
.TP
.BI \-i\  file \fR,\ \fB\-\-file-in= file
The name of the ascii file to read from. By default this is stdin.
.TP
.BI \-o\  file \fR,\ \fB\-\-file-out= file
The name of the ascii file to write to. By default this is stdout.
.TP
.BI \-q\  size \fR,\ \fB\-\-queue-size= size
Photons arriving after a single pulse are kept in a fixed-size queue, which
by default fits about a thousand photons. If filled to capacity, the queue
will automatically be doubled in size if possible, or an error will be returned.
You can set the initial queue size to either save memory or prevent overflows 
by passing a number of photon records with this flag.
.TP
.BI \-C\fR,\ \fB\-\-correlate-successive
By default, the photons are assigned to channels based on their number and 
order, with arrival pulse and time intact. By passing this flag, each photon
after the first is modified to indicate the time which has elapsed since
the previous photon arrived. For example, a three-photon event will yield
the first photon with its original arrival time, the second with the time
elapsed since the first photon, and the third with the time elapsed since the
second photon.

.SH ERRORS
Errors and other debug information are output to stderr.

.SH BUGS
There are no known bugs. If you should find any, please contact the author or 
file a bug report on github.

.SH AUTHOR
Thomas Bischof <tbischof@mit.edu>
.br
https://github.com/tsbischof/photon_correlation
